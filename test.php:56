#!/bin/bash
source ./spec.sh

STDOUT_FILE=/tmp/stdout
STDERR_FILE=/tmp/stderr

before_all() {
  mkdir -p /data/www/project
  cp -a ${PWD}/php-56-test-files/* /data/www/project
  /config/bootstrap.sh > ${STDOUT_FILE} 2> ${STDERR_FILE} & wait for nginx to respond
  for _ in $(seq 0 50)
  do
    sleep 0.1
    curl -sf localhost:8080/test.php && break
  done
  assert $? 0
}

it_should_run_correct_php_version() {
  assert_match "$(php --version 2>&1)" "PHP 5.6."
}

it_should_correctly_run_echo() {
  assert~ "$(curl localhost:8080/test.php)" "PHP TEST: echo" "'echo' in php should work"
}

it_should_have_memcached() {
  assert~ "$(curl localhost:8080/test.php)" "PHP TEST: memcached" "memcached should be available"
}

it_should_redirect_monolog_stdout_to_stdout() {
  assert~ "$(cat ${STDOUT_FILE})" "PHP TEST: monolog info to stdout"
  assert~ "$(cat ${STDOUT_FILE})" "PHP TEST: monolog warning to stdout"
}

it_should_redirect_monolog_stderr_to_stderr() {
  assert~ "$(cat ${STDERR_FILE})" "PHP TEST: monolog error to stderr"
}

it_should_redirect_error_log_to_stderr() {
  assert~ "$(cat ${STDERR_FILE})" "PHP TEST: error_log"
}


run_tests
