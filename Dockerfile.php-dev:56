# this is a Dockerfile that flattens out https://github.com/million12/docker-nginx-php / branch php56
# and uses meteogroup/centos:7 as a base
FROM meteogroup/centos:7



########################### https://github.com/million12/docker-centos-supervisor

# - Install basic packages (e.g. python-setuptools is required to have python's easy_install)
# - Install net-tools, small package with basic networking tools (e.g. netstat)
# - Install inotify, needed to automate daemon restarts after config file changes
# - Install supervisord (via python's easy_install - as it has the newest 3.x version)
# - Install yum-utils so we have yum-config-manager tool available
RUN \
  yum update -y && \
  yum install -y epel-release && \
  yum install -y iproute python-setuptools hostname inotify-tools yum-utils which && \
  yum clean all && \

  easy_install supervisor

# Add supervisord conf, bootstrap.sh files
ADD php-56-container-files/docker-centos-supervisor /

VOLUME ["/data"]



########################### https://github.com/million12/docker-nginx

ADD php-56-container-files/docker-nginx/etc/yum.repos.d/nginx.repo /etc/yum.repos.d/

RUN \
  yum install -y nginx && \
  yum clean all && \

  groupmod --gid 80 --new-name www nginx && \
  usermod --uid 80 --home /data/www --gid 80 --login www --shell /bin/bash --comment www nginx && \

  `# Clean-up /etc/nginx/ directory from all not needed stuff...` \
  rm -rf /etc/nginx/*.d /etc/nginx/*_params && \

  `# Prepare dummy SSL certificates` \
  mkdir -p /etc/nginx/ssl && \
  openssl genrsa -out /etc/nginx/ssl/dummy.key 2048 && \
  openssl req -new -key /etc/nginx/ssl/dummy.key -out /etc/nginx/ssl/dummy.csr -subj "/C=GB/L=London/O=Company Ltd/CN=docker" && \
  openssl x509 -req -days 3650 -in /etc/nginx/ssl/dummy.csr -signkey /etc/nginx/ssl/dummy.key -out /etc/nginx/ssl/dummy.crt

ADD php-56-container-files/docker-nginx /

ENV \
  NGINX_GENERATE_DEFAULT_VHOST=false \
  STATUS_PAGE_ALLOWED_IP=127.0.0.1

EXPOSE 80 443


########################### https://github.com/million12/docker-nginx-php

ADD php-56-container-files/docker-nginx-php/config/install* /config/

RUN \
  rpm --rebuilddb && yum update -y && \
  `# Install yum-utils (provides yum-config-manager) + some basic web-related tools...` \
  yum install -y yum-utils wget patchtar bzip2 unzip openssh-clients rsync && \

  `# Install PHP 5.6` \
  rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm && \
  yum-config-manager -q --enable remi && \
  yum-config-manager -q --enable remi-php56 && \
  yum install -y php-fpm php-bcmath php-cli php-gd php-intl php-mbstring \
                  php-pecl-imagick php-mcrypt php-mysql php-opcache php-pdo && \


  `# Install common tools needed/useful during Web App development` \


  `# Install/compile other software (Git, NodeJS)` \

  yum clean all && rm -rf /tmp/yum* && \



  `# Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode` \
  echo -e "StrictHostKeyChecking no" >> /etc/ssh/ssh_config && \

  curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
  chown www /usr/local/bin/composer

ADD php-56-container-files/docker-nginx-php /

ENV STATUS_PAGE_ALLOWED_IP=127.0.0.1


########################### HA! ... our own stuff
RUN yum update && yum install -y php-memcache php-memcached
RUN bash -exc "curl -O http://getcomposer.org/composer.phar && mv composer.phar /usr/bin/composer && chmod +x /usr/bin/composer; \
               yum install -y git; \
               bash <(curl -f http://rpmrepo.de.meteogroup.net/sourcebin/haarp-install)"
